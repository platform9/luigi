apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: yoshi
    control-plane: controller-manager
  name: yoshi-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: yoshi-system/yoshi-serving-cert
    controller-gen.kubebuilder.io/version: v0.11.1
  name: networkwizards.plumber.k8s.pf9.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: yoshi-webhook-service
          namespace: yoshi-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: plumber.k8s.pf9.io
  names:
    kind: NetworkWizard
    listKind: NetworkWizardList
    plural: networkwizards
    singular: networkwizard
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: NetworkWizard is the Schema for the networkwizards API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NetworkWizardSpec defines the desired state of NetworkWizard
            properties:
              bgpConfig:
                description: BGPConfiguration - valid only for "public" type networks
                properties:
                  myASN:
                    description: ASN to use for the cluster's BGP advertisements
                    type: integer
                  peers:
                    description: Comma separated list of physical routers to peer
                      with
                    items:
                      type: string
                    type: array
                  remoteASN:
                    description: ASN of peer router
                    type: integer
                type: object
              cidr:
                description: CIDR notation for the network plugin to provision
                type: string
              plugin:
                description: 'Plugin specifies the type of network/CNI to create in
                  the backend Valid values for now: "calico" and "public", more as
                  we add Multus networks'
                type: string
              range_end:
                description: "An IP is a single IP address, a slice of bytes. Functions
                  in this package accept either 4-byte (IPv4) or 16-byte (IPv6) slices
                  as input. \n Note that in this documentation, referring to an IP
                  address as an IPv4 address or an IPv6 address is a semantic property
                  of the address, not just the length of the byte slice: a 16-byte
                  slice can still be an IPv4 address."
                format: byte
                type: string
              range_start:
                description: "An IP is a single IP address, a slice of bytes. Functions
                  in this package accept either 4-byte (IPv4) or 16-byte (IPv6) slices
                  as input. \n Note that in this documentation, referring to an IP
                  address as an IPv4 address or an IPv6 address is a semantic property
                  of the address, not just the length of the byte slice: a 16-byte
                  slice can still be an IPv4 address."
                format: byte
                type: string
            type: object
          status:
            description: NetworkWizardStatus defines the observed state of NetworkWizard
            properties:
              allocations:
                additionalProperties:
                  type: string
                description: 'Stores Fixed IP Allocations for a given VM: <fixed IP>
                  :< VM Name>'
                type: object
              created:
                description: Bool indicating if the network was created by CNI plugin
                type: boolean
              reason:
                description: Error message indicating CNI errors
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: yoshi
  name: yoshi-controller-manager
  namespace: yoshi-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: yoshi
  name: yoshi-leader-election-role
  namespace: yoshi-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: yoshi-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - plumber.k8s.pf9.io
  resources:
  - networkwizards
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - plumber.k8s.pf9.io
  resources:
  - networkwizards/finalizers
  verbs:
  - update
- apiGroups:
  - plumber.k8s.pf9.io
  resources:
  - networkwizards/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: yoshi
  name: yoshi-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: yoshi
  name: yoshi-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: yoshi
  name: yoshi-leader-election-rolebinding
  namespace: yoshi-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: yoshi-leader-election-role
subjects:
- kind: ServiceAccount
  name: yoshi-controller-manager
  namespace: yoshi-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: yoshi
  name: yoshi-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: yoshi-manager-role
subjects:
- kind: ServiceAccount
  name: yoshi-controller-manager
  namespace: yoshi-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: yoshi
  name: yoshi-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: yoshi-proxy-role
subjects:
- kind: ServiceAccount
  name: yoshi-controller-manager
  namespace: yoshi-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: yoshi
    control-plane: controller-manager
  name: yoshi-controller-manager-metrics-service
  namespace: yoshi-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: yoshi
  name: yoshi-webhook-service
  namespace: yoshi-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: yoshi
    control-plane: controller-manager
  name: yoshi-controller-manager
  namespace: yoshi-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: xagent003/yoshi:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - --tls-min-version=VersionTLS12
        image: quay.io/brancz/kube-rbac-proxy:v0.18.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: yoshi-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: yoshi
  name: yoshi-serving-cert
  namespace: yoshi-system
spec:
  dnsNames:
  - yoshi-webhook-service.yoshi-system.svc
  - yoshi-webhook-service.yoshi-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: yoshi-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: selfsigned-issuer
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: issuer
    app.kubernetes.io/part-of: yoshi
  name: yoshi-selfsigned-issuer
  namespace: yoshi-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: yoshi-system/yoshi-serving-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: yoshi
    app.kubernetes.io/instance: mutating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mutatingwebhookconfiguration
    app.kubernetes.io/part-of: yoshi
  name: yoshi-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: yoshi-webhook-service
      namespace: yoshi-system
      path: /mutate-v1-vm
  failurePolicy: Fail
  name: mvm.kb.io
  rules:
  - apiGroups:
    - kubevirt.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - virtualmachines
  sideEffects: None
