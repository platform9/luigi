apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: luigi-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: luigi-system/luigi-serving-cert
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: networkplugins.plumber.k8s.pf9.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          namespace: system
          name: webhook-service
          path: /convert
      conversionReviewVersions:
      - v1
  group: plumber.k8s.pf9.io
  names:
    kind: NetworkPlugins
    listKind: NetworkPluginsList
    plural: networkplugins
    singular: networkplugins
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: NetworkPlugins is the Schema for the networkplugins API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NetworkPluginsSpec defines the desired state of NetworkPlugins
            properties:
              plugins:
                properties:
                  dhcpController:
                    properties:
                      DHCPControllerImage:
                        type: string
                      imagePullPolicy:
                        type: string
                      kubemacpoolRangeEnd:
                        type: string
                      kubemacpoolRangeStart:
                        type: string
                      kubemacpoolnamespace:
                        type: string
                    type: object
                  hostPlumber:
                    properties:
                      hostPlumberImage:
                        type: string
                      imagePullPolicy:
                        type: string
                      namespace:
                        type: string
                    type: object
                  multus:
                    properties:
                      imagePullPolicy:
                        type: string
                      multusImage:
                        type: string
                      namespace:
                        type: string
                    type: object
                  nodeFeatureDiscovery:
                    properties:
                      imagePullPolicy:
                        type: string
                      namespace:
                        type: string
                      nfdImage:
                        type: string
                    type: object
                  ovs:
                    properties:
                      cniImage:
                        type: string
                      dpdk:
                        properties:
                          hugepageMemory:
                            type: string
                          lcoreMask:
                            type: string
                          pmdCpuMask:
                            type: string
                          socketMem:
                            type: string
                        required:
                        - hugepageMemory
                        - lcoreMask
                        - pmdCpuMask
                        - socketMem
                        type: object
                      imagePullPolicy:
                        type: string
                      markerImage:
                        type: string
                      namespace:
                        type: string
                      ovsImage:
                        type: string
                    type: object
                  sriov:
                    properties:
                      imagePullPolicy:
                        type: string
                      namespace:
                        type: string
                      sriovCniImage:
                        type: string
                      sriovConfigMap:
                        type: string
                      sriovDpImage:
                        type: string
                    type: object
                  whereabouts:
                    properties:
                      imagePullPolicy:
                        type: string
                      ipReconcilerNodeSelector:
                        additionalProperties:
                          type: string
                        type: object
                      ipReconcilerSchedule:
                        type: string
                      namespace:
                        type: string
                      whereaboutsImage:
                        type: string
                    type: object
                type: object
              privateRegistryBase:
                type: string
            type: object
          status:
            description: NetworkPluginsStatus defines the observed state of NetworkPlugins
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: luigi-controller-manager
  namespace: luigi-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: luigi-leader-election-role
  namespace: luigi-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: luigi-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - plumber.k8s.pf9.io
  resources:
  - networkplugins
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - plumber.k8s.pf9.io
  resources:
  - networkplugins/finalizers
  verbs:
  - update
- apiGroups:
  - plumber.k8s.pf9.io
  resources:
  - networkplugins/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: luigi-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: luigi-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: luigi-leader-election-rolebinding
  namespace: luigi-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: luigi-leader-election-role
subjects:
- kind: ServiceAccount
  name: luigi-controller-manager
  namespace: luigi-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: luigi-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: luigi-manager-role
subjects:
- kind: ServiceAccount
  name: luigi-controller-manager
  namespace: luigi-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: luigi-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: luigi-proxy-role
subjects:
- kind: ServiceAccount
  name: luigi-controller-manager
  namespace: luigi-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 38ed3ed1.k8s.pf9.io
kind: ConfigMap
metadata:
  name: luigi-manager-config
  namespace: luigi-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: luigi-controller-manager-metrics-service
  namespace: luigi-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: luigi-controller-manager
  namespace: luigi-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - --tls-min-version=VersionTLS12
        image: docker.io/brancz/kube-rbac-proxy:v0.18.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi

      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: docker.io/platform9/luigi-plugins:private-master-shubhamc-AIR-895-singleton-pmk-2739563
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      serviceAccountName: luigi-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: luigi
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: luigi
  name: webhook-service
  namespace: luigi-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: luigi
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: luigi
  name: luigi-serving-cert
  namespace: luigi-system
spec:
  dnsNames:
  - webhook-service.luigi-system.svc
  - webhook-service.luigi-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: luigi-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: luigi-selfsigned-issuer
  namespace: luigi-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: luigi-system/luigi-serving-cert
  creationTimestamp: null
  name: mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: webhook-service
      namespace: luigi-system
      path: /mutate-v1-networkplugins
  failurePolicy: Fail
  name: np.plumber.io
  rules:
  - apiGroups:
    - plumber.k8s.pf9.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - networkplugins
  sideEffects: None
  timeoutSeconds: 30
