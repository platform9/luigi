apiVersion: apps/v1
kind: DaemonSet
metadata:
    name: ovs-daemons
    namespace: {{ .Namespace }}
    labels:
        tier: node
        app: ovs
spec:
    selector:
        matchLabels:
            app: ovs
    template:
        metadata:
          labels:
            tier: node
            app: ovs
          annotations:
            description: OVS app runs the ovsdb-server and ovs-vswitch processes as a DaemonSet on all nodes.
        spec:
          serviceAccountName: ovs-daemonset
          hostNetwork: true
          hostPID: true
          hostIPC: true
          nodeSelector:
             kubernetes.io/arch: amd64
             kubernetes.io/os: linux
          tolerations:
          - key: node-role.kubernetes.io/master
            operator: Exists
            effect: NoExecute

          initContainers:
            - name: ovs-db-init
              image: {{ .OVSImage }}
              imagePullPolicy: {{ .ImagePullPolicy }}
              command: ['/bin/sh', '-c']
              args: ['ls /etc/openvswitch/conf.db || ovsdb-tool create']
              securityContext:
                privileged: true
              volumeMounts:
                - name: etc-ovs
                  mountPath: /etc/openvswitch

          containers:
            - name: ovs-services
              image: {{ .OVSImage }}
              imagePullPolicy: {{ .ImagePullPolicy }}
{{- if .DPDK }}
              env:
              - name: EnableDpdk
                value: "true"
              - name: LcoreMask
                value: "{{ .DPDK.LcoreMask }}"
              - name: SocketMem
                value: "{{ .DPDK.SocketMem }}"
              - name: PmdCpuMask
                value: "{{ .DPDK.PmdCpuMask }}"
{{- end }}
              securityContext:
                capabilities:
                  add: ["NET_ADMIN", "SYS_MODULE", "SYS_NICE"]
                privileged: true
              volumeMounts:
                - name: etc-ovs
                  mountPath: /etc/openvswitch
                - name: lib-modules
                  mountPath: /lib/modules
                - name: var-run-ovs
                  mountPath: /var/run/openvswitch
                - name: host-sys
                  mountPath: /sys
                - name: vfio-dir
                  mountPath: /dev/vfio
                - name: var-lib-ovs
                  mountPath: /var/lib/openvswitch
                - name: var-log-ovs
                  mountPath: /var/log/openvswitch
{{- if .DPDK }}
                - name: hugepages
                  mountPath: /dev/hugepages
                  readOnly: False
                - name: vhost-sockets
                  mountPath: /var/lib/vhost_sockets
                  mountPropagation: HostToContainer
              resources:
                limits:
                  hugepages-{{ .HugepageSize }}: "{{ .DPDK.HugepageMemory }}"
                  memory: "{{ .DPDK.HugepageMemory }}"
                requests:
                  memory: "{{ .DPDK.HugepageMemory }}"
{{- end }}
          volumes:
            - name: lib-modules
              hostPath:
                  path: /lib/modules
            - name: etc-ovs
              hostPath:
                  path: /etc/openvswitch
            - name: var-run-ovs
              hostPath:
                  path: /var/run/openvswitch
            - name: host-sys
              hostPath: 
                  path: /sys
            - name: vfio-dir
              hostPath:
                  path: /dev/vfio
            - name: var-lib-ovs
              hostPath:
                  path: /var/lib/openvswitch
            - name: var-log-ovs
              hostPath:
                  path: /var/log/openvswitch
{{- if .DPDK }}
            - name: hugepages
              hostPath:
                  path: /dev/hugepages
                  type: Directory
            - name: vhost-sockets
              hostPath:
                  path: /var/lib/vhost_sockets
            - name: hugepagevolume
              emptyDir:
                medium: HugePages-"{{ .HugepageSize }}"
{{- end }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ovs-daemonset-cr
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - get
  - update
  - patch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ovs-daemonset-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ovs-daemonset-cr
subjects:
- kind: ServiceAccount
  name: ovs-daemonset
  namespace: {{ .Namespace }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ovs-daemonset
  namespace: {{ .Namespace }}
