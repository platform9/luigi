apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: dhcp-controller-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: dhcpservers.dhcp.plumber.k8s.pf9.io
spec:
  group: dhcp.plumber.k8s.pf9.io
  names:
    kind: DHCPServer
    listKind: DHCPServerList
    plural: dhcpservers
    singular: dhcpserver
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DHCPServer is the Schema for the dhcpservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DHCPServerSpec defines the desired state of DHCPServer
            properties:
              hugepageSize:
                description: Hugepage Size
                type: string
              networks:
                description: Details of Networks
                items:
                  properties:
                    cidr:
                      description: refers to CIDR of server
                      properties:
                        gateway:
                          description: refers to gateway IP
                          type: string
                        range:
                          description: refers to cidr range
                          type: string
                        range_end:
                          description: refers to end IP of range
                          type: string
                        range_start:
                          description: refers to start IP of range
                          type: string
                      required:
                      - range
                      type: object
                    interfaceIp:
                      description: refers to IP address to bind interface to
                      type: string
                    isDPDK:
                      description: refers to if network is dpdk
                      type: boolean
                    leaseDuration:
                      description: refers to leasetime of IP
                      type: string
                    networkName:
                      description: refers to net-attach-def to be served
                      type: string
                    vlanId:
                      description: refers to vlan
                      type: string
                  required:
                  - cidr
                  - interfaceIp
                  - networkName
                  type: object
                type: array
            type: object
          status:
            description: DHCPServerStatus defines the observed state of DHCPServer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dhcp-controller-controller-manager
  namespace: dhcp-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dhcp-controller-leader-election-role
  namespace: dhcp-controller-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: dhcp-controller-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - virtualmachineinstances
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - '*'
  resources:
  - virtualmachines
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - '*'
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - dhcpservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - dhcpservers/finalizers
  verbs:
  - update
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - dhcpservers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - ipallocations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - ipallocations/finalizers
  verbs:
  - update
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - ipallocations/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dhcp-controller-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dhcp-controller-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dhcp-controller-leader-election-rolebinding
  namespace: dhcp-controller-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dhcp-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: dhcp-controller-controller-manager
  namespace: dhcp-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dhcp-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dhcp-controller-manager-role
subjects:
- kind: ServiceAccount
  name: dhcp-controller-controller-manager
  namespace: dhcp-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dhcp-controller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dhcp-controller-proxy-role
subjects:
- kind: ServiceAccount
  name: dhcp-controller-controller-manager
  namespace: dhcp-controller-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: a44f9c69.plumber.k8s.pf9.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: dhcp-controller-manager-config
  namespace: dhcp-controller-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: dhcp-controller-controller-manager-metrics-service
  namespace: dhcp-controller-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: dhcp-controller-controller-manager
  namespace: dhcp-controller-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: {{ .KubeRbacProxyImage }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: {{ .DhcpControllerImage }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: false
      serviceAccountName: dhcp-controller-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: ipallocations.dhcp.plumber.k8s.pf9.io
spec:
  group: dhcp.plumber.k8s.pf9.io
  names:
    kind: IPAllocation
    listKind: IPAllocationList
    plural: ipallocations
    singular: ipallocation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IPAllocation is the Schema for the ipallocations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IPAllocationSpec defines the desired state of IPAllocation
            properties:
              entityRef:
                description: EntityRef is the name of the VMI or pod who owns the
                  lease
                type: string
              leaseExpiry:
                description: LeaseExpiry is the epoch time when the IP was set to
                  expire in the leasefile
                type: string
              macAddr:
                description: MacAddr is the mac address of interface
                type: string
              vlanId:
                description: VlanID is the epoch time when the IP was set to expire
                  in the leasefile
                type: string
            required:
            - leaseExpiry
            - vlanId
            type: object
          status:
            description: IPAllocationStatus defines the observed state of IPAllocation
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dhcpserver-controller-manager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dhcpserver-leader-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: dhcpserver-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - '*'
  resources:
  - virtualmachineinstances
  verbs:
  - list
  - watch
- apiGroups:
  - '*'
  resources:
  - virtualmachines
  verbs:
  - list
  - watch
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - ipallocations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - ipallocations/finalizers
  verbs:
  - update
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - ipallocations/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dhcpserver-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dhcpserver-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dhcpserver-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dhcpserver-leader-election-role
subjects:
- kind: ServiceAccount
  name: dhcpserver-controller-manager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dhcpserver-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dhcpserver-manager-role
subjects:
- kind: ServiceAccount
  name: dhcpserver-controller-manager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dhcpserver-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dhcpserver-proxy-role
subjects:
- kind: ServiceAccount
  name: dhcpserver-controller-manager
  namespace: default
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 31a25fb5.plumber.k8s.pf9.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: dhcpserver-manager-config
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: dhcpserver-controller-manager-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
