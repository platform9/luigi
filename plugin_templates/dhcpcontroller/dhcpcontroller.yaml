apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    pod-security.kubernetes.io/enforce: privileged
  name: dhcp-controller-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: dhcpservers.dhcp.plumber.k8s.pf9.io
spec:
  group: dhcp.plumber.k8s.pf9.io
  names:
    kind: DHCPServer
    listKind: DHCPServerList
    plural: dhcpservers
    singular: dhcpserver
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DHCPServer is the Schema for the dhcpservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DHCPServerSpec defines the desired state of DHCPServer
            properties:
              networks:
                description: Details of Networks
                items:
                  properties:
                    cidr:
                      description: refers to CIDR of server
                      properties:
                        gateway:
                          description: refers to gateway IP
                          type: string
                        range:
                          description: refers to cidr range
                          type: string
                        range_end:
                          description: refers to end IP of range
                          type: string
                        range_start:
                          description: refers to start IP of range
                          type: string
                      required:
                      - range
                      type: object
                    interfaceIp:
                      description: refers to IP address to bind interface to
                      type: string
                    leaseDuration:
                      description: refers to leasetime of IP
                      type: string
                    networkName:
                      description: refers to net-attach-def to be served
                      type: string
                    vlanId:
                      description: refers to vlan
                      type: string
                  required:
                  - cidr
                  - interfaceIp
                  - networkName
                  type: object
                type: array
              nodeSelector:
                additionalProperties:
                  type: string
                description: Node Selector for the DHCPServer VM
                type: object
            type: object
          status:
            description: DHCPServerStatus defines the observed state of DHCPServer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dhcp-controller-controller-manager
  namespace: dhcp-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dhcp-controller-leader-election-role
  namespace: dhcp-controller-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: dhcp-controller-manager-role
rules:
- apiGroups:
  - pool.kubevirt.io
  resources:
  - virtualmachinepools
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - k8s.cni.cncf.io
  resources:
  - network-attachment-definitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - '*'
  resources:
  - virtualmachineinstances
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - '*'
  resources:
  - virtualmachines
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - '*'
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - dhcpservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - dhcpservers/finalizers
  verbs:
  - update
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - dhcpservers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - ipallocations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - ipallocations/finalizers
  verbs:
  - update
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - ipallocations/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dhcp-controller-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dhcp-controller-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dhcp-controller-leader-election-rolebinding
  namespace: dhcp-controller-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dhcp-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: dhcp-controller-controller-manager
  namespace: dhcp-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dhcp-controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dhcp-controller-manager-role
subjects:
- kind: ServiceAccount
  name: dhcp-controller-controller-manager
  namespace: dhcp-controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dhcp-controller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dhcp-controller-proxy-role
subjects:
- kind: ServiceAccount
  name: dhcp-controller-controller-manager
  namespace: dhcp-controller-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: a44f9c69.plumber.k8s.pf9.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: dhcp-controller-manager-config
  namespace: dhcp-controller-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: dhcp-controller-controller-manager-metrics-service
  namespace: dhcp-controller-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: dhcp-controller-controller-manager
  namespace: dhcp-controller-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - --tls-min-version=VersionTLS12
        image: {{ .KubeRbacProxyImage }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: {{ .DhcpControllerImage }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: false
      serviceAccountName: dhcp-controller-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: ipallocations.dhcp.plumber.k8s.pf9.io
spec:
  group: dhcp.plumber.k8s.pf9.io
  names:
    kind: IPAllocation
    listKind: IPAllocationList
    plural: ipallocations
    singular: ipallocation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IPAllocation is the Schema for the ipallocations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IPAllocationSpec defines the desired state of IPAllocation
            properties:
              entityRef:
                description: EntityRef is the name of the VMI or pod who owns the
                  lease
                type: string
              leaseExpiry:
                description: LeaseExpiry is the epoch time when the IP was set to
                  expire in the leasefile
                type: string
              macAddr:
                description: MacAddr is the mac address of interface
                type: string
              vlanId:
                description: VlanID is the epoch time when the IP was set to expire
                  in the leasefile
                type: string
            required:
            - leaseExpiry
            - vlanId
            type: object
          status:
            description: IPAllocationStatus defines the observed state of IPAllocation
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dhcpserver-controller-manager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dhcpserver-leader-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: dhcpserver-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - '*'
  resources:
  - virtualmachineinstances
  verbs:
  - list
  - watch
- apiGroups:
  - '*'
  resources:
  - virtualmachines
  verbs:
  - list
  - watch
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - ipallocations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - ipallocations/finalizers
  verbs:
  - update
- apiGroups:
  - dhcp.plumber.k8s.pf9.io
  resources:
  - ipallocations/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dhcpserver-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dhcpserver-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dhcpserver-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dhcpserver-leader-election-role
subjects:
- kind: ServiceAccount
  name: dhcpserver-controller-manager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dhcpserver-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dhcpserver-manager-role
subjects:
- kind: ServiceAccount
  name: dhcpserver-controller-manager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dhcpserver-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dhcpserver-proxy-role
subjects:
- kind: ServiceAccount
  name: dhcpserver-controller-manager
  namespace: default
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 31a25fb5.plumber.k8s.pf9.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: dhcpserver-manager-config
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: dhcpserver-controller-manager-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: mac-controller-manager
    pod-security.kubernetes.io/enforce: restricted
  name: {{ .KubemacpoolNamespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kubemacpool-manager-role
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - create
  - update
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/status
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - update
  - patch
  - list
  - watch
- apiGroups:
  - kubevirt.io
  resources:
  - virtualmachines
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: kubemacpool-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubemacpool-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: {{ .KubemacpoolNamespace }}
---
apiVersion: v1
data:
  RANGE_END: {{ .KubemacpoolRangeEnd }}
  RANGE_START: {{ .KubemacpoolRangeStart }}
kind: ConfigMap
metadata:
  labels:
    control-plane: mac-controller-manager
    controller-tools.k8s.io: "1.0"
  name: kubemacpool-mac-range-config
  namespace: {{ .KubemacpoolNamespace }}
---
apiVersion: v1
kind: Service
metadata:
  name: kubemacpool-service
  namespace: {{ .KubemacpoolNamespace }}
spec:
  ports:
  - port: 443
    targetPort: 8000
  publishNotReadyAddresses: true
  selector:
    control-plane: mac-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: cert-manager
    controller-tools.k8s.io: "1.0"
  name: kubemacpool-cert-manager
  namespace: {{ .KubemacpoolNamespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: cert-manager
      controller-tools.k8s.io: "1.0"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kubemacpool
        control-plane: cert-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - args:
        - --v=production
        command:
        - /manager
        env:
        - name: RUN_CERT_MANAGER
          value: ""
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: COMPONENT
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/component']
        - name: PART_OF
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/part-of']
        - name: VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        - name: MANAGED_BY
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/managed-by']
        - name: CA_ROTATE_INTERVAL
          value: 8760h0m0s
        - name: CA_OVERLAP_INTERVAL
          value: 24h0m0s
        - name: CERT_ROTATE_INTERVAL
          value: 4380h0m0s
        - name: CERT_OVERLAP_INTERVAL
          value: 24h0m0s
        image: {{ .KubemacpoolImage }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        name: manager
        resources:
          requests:
            cpu: 30m
            memory: 30Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 107
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: mac-controller-manager
    controller-tools.k8s.io: "1.0"
  name: kubemacpool-mac-controller-manager
  namespace: {{ .KubemacpoolNamespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: mac-controller-manager
      controller-tools.k8s.io: "1.0"
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        description: KubeMacPool manages MAC allocation to Pods and VMs
      labels:
        app: kubemacpool
        control-plane: mac-controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: control-plane
                  operator: In
                  values:
                  - mac-controller-manager
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - args:
        - --v=production
        - --wait-time=300
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RANGE_START
          valueFrom:
            configMapKeyRef:
              key: RANGE_START
              name: kubemacpool-mac-range-config
        - name: RANGE_END
          valueFrom:
            configMapKeyRef:
              key: RANGE_END
              name: kubemacpool-mac-range-config
        - name: KUBEVIRT_CLIENT_GO_SCHEME_REGISTRATION_VERSION
          value: v1
        image: {{ .KubemacpoolImage }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        name: manager
        ports:
        - containerPort: 8000
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: Content-Type
              value: application/json
            path: /readyz
            port: webhook-server
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs/
          name: tls-key-pair
          readOnly: true
      - args:
        - --logtostderr
        - --secure-listen-address=:8443
        - --upstream=http://127.0.0.1:8080
        image: quay.io/openshift/origin-kube-rbac-proxy:4.10.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 107
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 5
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 60
      volumes:
      - name: tls-key-pair
        secret:
          secretName: kubemacpool-service
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: kubemacpool-mutator
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: kubemacpool-service
      namespace: {{ .KubemacpoolNamespace }}
      path: /mutate-pods
  failurePolicy: Fail
  name: mutatepods.kubemacpool.io
  namespaceSelector:
    matchExpressions:
    - key: runlevel
      operator: NotIn
      values:
      - "0"
      - "1"
    - key: openshift.io/run-level
      operator: NotIn
      values:
      - "0"
      - "1"
    - key: mutatepods.kubemacpool.io
      operator: In
      values:
      - allocate
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: NoneOnDryRun
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: kubemacpool-service
      namespace: {{ .KubemacpoolNamespace }}
      path: /mutate-virtualmachines
  failurePolicy: Fail
  name: mutatevirtualmachines.kubemacpool.io
  namespaceSelector:
    matchExpressions:
    - key: runlevel
      operator: NotIn
      values:
      - "0"
      - "1"
    - key: openshift.io/run-level
      operator: NotIn
      values:
      - "0"
      - "1"
    - key: mutatevirtualmachines.kubemacpool.io
      operator: NotIn
      values:
      - ignore
  rules:
  - apiGroups:
    - kubevirt.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - virtualmachines
  sideEffects: NoneOnDryRun
