apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: "Exists"
          effect: NoSchedule
      containers:
      - command:
        - /manager
        image: host-plumber:latest
        imagePullPolicy: IfNotPresent
        name: manager
        securityContext:
          privileged: true
        env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: K8S_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - name: host
          mountPath: /host
        - name: ovs-var-run
          mountPath: /var/run/openvswitch
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
      hostNetwork: true
      volumes:
        - name: host
          hostPath:
            path: /
        - name: ovs-var-run
          hostPath:
            path: /var/run/openvswitch
